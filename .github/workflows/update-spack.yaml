name: Update spack develop version

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Create new spack.x
        run: |
          # Get the SHA of the latest spack release
          SPACK_SHA=$(git ls-remote https://github.com/spack/spack.git | grep refs/heads/develop | head -n1 | awk '{ print $1}')
          echo "Using spack SHA $SPACK_SHA"

          # Download the latest stable spack.x release and the latest runtime.x
          export BASE_VERSION="v1.2.1"
          echo "Downloading spack.x and runtime.x from version $BASE_VERSION"
          curl -LfSs -o spack.x "https://github.com/haampie/spack-batteries-included/releases/download/$BASE_VERSION/spack.x"
          curl -LfSs -o runtime.x "https://github.com/haampie/spack-batteries-included/releases/download/$BASE_VERSION/runtime.x"
          echo "5477933a5225576ea364f9510a6981dfce36cda9c94125691a78df93c1011d65 spack.x" | sha256sum --check
          echo "6315ec43508550cb1896ef2da5d0bec2274715aa13ca9fad73da23dd53c65772 runtime.x" | sha256sum --check
          chmod +x spack.x runtime.x

          # Download spack patches
          echo "Downloading patches / files"
          curl -LSsf "https://github.com/haampie/spack-batteries-included/raw/$BASE_VERSION/bootstrap-spack/20158.patch" > 20158.patch
          curl -LSsf "https://github.com/haampie/spack-batteries-included/raw/$BASE_VERSION/bootstrap-spack/config.yaml" > config.yaml
          echo "4e0624b1c4527429f36aa5cff12266b4611f228731e3a01be1f06e075daf6571 20158.patch" | sha256sum --check
          echo "2783a5cb8d712bad1e1b6193d745cb56438f6a3e0b83638687df1f9e2b1cb206 config.yaml" | sha256sum --check

          # Extract them.
          echo "Extracting spack.x and runtime.x $BASE_VERSION"
          mkdir spack_x runtime_x
          
          (
            cd spack_x || exit
            ../spack.x --appimage-extract 1> /dev/null
          )
          (
            cd runtime_x || exit
            ../runtime.x --appimage-extract 1> /dev/null
          )

          # Replace the spack version
          echo "Download Spack $SPACK_SHA"
          rm -rf spack_x/squashfs-root/spack
          mkdir spack_x/squashfs-root/spack
          curl -LfSs "https://api.github.com/repos/spack/spack/tarball/$SPACK_SHA" | tar --strip-components=1 -xz -C spack_x/squashfs-root/spack
          echo "$SPACK_SHA" > spack_x/squashfs-root/spack_sha

          # Apply the patch that allows you to drop specifying --log-file
          (
            cd spack_x/squashfs-root/spack || exit
            patch -p1 "$GITHUB_WORKSPACE/20158.patch"
            cp "$GITHUB_WORKSPACE/config.yaml" etc/spack/
          )

          # Generate __pycache__ files
          (
            cd spack_x/squashfs-root || exit
            find . -iname "__pycache__" -print0 | xargs rm -rf
            ./AppRun python -m compileall spack/ 1> /dev/null || true
          )

          # Create a new squashfs file
          ./runtime_x/squashfs-root/view/bin/mksquashfs spack_x/squashfs-root spack.squashfs

          # Overwrite spack.x
          cat runtime_x/squashfs-root/runtime spack.squashfs > spack.x
      - name: Upload release assets
        run: |
          curl -fsS \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/haampie/spack-batteries-included/releases > release_info.json

          # Get the release url
          release_id="$(< release_info.json jq -r '.[] | select(.tag_name=="develop") | .id')"

          if [ -z "$release_id" ]; then
            echo "Couldn't get release id"
            exit 1
          fi

          echo "Using release id $release_id"

          for name in spack.x spack.squashfs
          do
            # Get the asset url
            asset_url="$(< release_info.json jq -r --arg name "$name" '.[] | select(.tag_name=="develop") | .assets[] | select(.name==$name) | .url')"

            # Delete the asset
            if [ -n "$asset_url" ]; then
              echo "Deleting remote $name"
              curl -fsS \
                -X DELETE \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "$asset_url"
            fi

            # Upload a new one.
            echo "Uploading $name"
            curl -fsS \
              -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @$name \
              "https://uploads.github.com/repos/haampie/spack-batteries-included/releases/$release_id/assets?name=$name)"
          done



